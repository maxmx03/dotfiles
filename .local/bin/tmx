#!/usr/bin/env bash

function help {
  echo "üìù Notes - Help

  Usage: tmx <command>
  Dependencies: jq tmux

  COMMANDS:
  newx  config.json   new complex sessions
  new   session-name  new session
  attach              attach session
  rm                  rm session
  help                help"
}

function newx {
  declare directory file
  directory=$(pwd)
  file="${directory}/$1"

  num_sessions=$(jq '.sessions | length' "${file}")

  for ((i = 0; i < num_sessions; i++)); do
    declare project root
    declare -i index=1

    session=$(jq ".sessions[$i]" "${file}")
    project=$(echo "${session}" | jq -r .name)

    tmux has-session -t $project 2>/dev/null

    if [ $? != 0 ]; then
      tmux new-session -s $project -d

      root=$(echo "${session}" | jq -r .root)
      tmux send-keys -t $project "cd $root" C-m
      tmux send-keys -t $project "clear" C-m

      # Extraindo as janelas
      mapfile -t windows < <(echo "$session" | jq -r '.windows[]')

      for window in "${windows[@]}"; do
        if [[ $index -gt 1 ]]; then
          tmux new-window -t $project
        fi
        tmux send-keys -t $project "cd $root" C-m
        tmux send-keys -t $project "$window" C-m
        index=$index+1
      done

      tmux select-window -t "${project}:1"
    fi
  done
}

function remove {
  sessions=$(tmux ls | awk -F':' '{print $1}')

  echo "Select a session to delete:"
  select session in $sessions; do
    if [ -n "$session" ]; then
      break
    else
      echo "Invalid selection."
    fi
  done

  read -p "Are you sure you want to delete the session '$session'? (y/n): " confirm
  if [[ "$confirm" == [yY] ]]; then
    tmux kill-session -t "$session"
    echo "Session '$session' deleted."
  else
    echo "Deletion canceled."
  fi
}

function new {
  declare session confirm
  session=$1

  [[ -z $session ]] && _tmx_help && return

  read -p "attach to the session '$session'? (y/n): " confirm
  if [[ "$confirm" == [yY] ]]; then
    tmux new -s $session
  else
    tmux new -s $session -d
  fi
}

function attach {
  declare session sessions
  sessions=$(tmux ls | awk -F':' '{print $1}')
  echo "select a session"
  if [[ -n $(command -v gum) ]]; then
    session="$(gum choose $sessions)"
  else
    select session in $sessions; do
      if [ -n "$session" ]; then
        break
      else
        echo "Invalid selection."
      fi
    done
  fi
  tmux attach-session -t "${session}"
}


declare -A subcmds=(
  [attach]="attach"
  [new]="new"
  [newx]="newx"
  [rm]="remove"
  [help]="help"
)
[[ -z "${subcmds[$1]}" ]] && {
  help
  return 1
} || ${subcmds[$1]} "$2"
