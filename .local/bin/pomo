#!/usr/bin/env bash

function clock {
  minutes=$(($1 / 60))
  seconds=$(($1 % 60))
  printf "%02d:%02d" "$minutes" "$seconds"
}

function timer {
  declare -i t percentage
  local message
  t=$(($1 * 60))
  message=$2
  for ((i = 1; i <= t; i++)); do
    percentage=$((i * 100 / t))
    bar_length=$((percentage / 2))
    # printf "\r${message^^} [%-${bar_length}s] %d%%" "$(seq -s "#" "$bar_length" | tr -d '[:digit:]')" "$percentage"
    printf "\r${message^^} %s" "$(clock $((t - i)))"
    sleep 1s
  done

  echo -e "\nDone!"
}

state=$1
sound=/usr/share/sounds/freedesktop/stereo/complete.oga

function notify {
  at now <<END
  notify-send -t "$1" "session done"
  pw-play $HOME/Music/clock-alarm.mp3
END
}

declare -i session
session=1
while true; do
  case $state in
    work)
      timer "25" "$state"
      notify "$state" 2> /dev/null
      ;;
    break)
      timer "5" "$state"
      notify "$state" 2> /dev/null
      ;;
    extrabreak)
      timer "10" "$state"
      notify "$state" 2> /dev/null
      ;;
    *)
      echo "
      usage:
      pomodoro work
      pomodoro break
      "
      ;;
  esac

  case $((session % 4)) in
    0)
      state="extrabreak"
      ;;
    *)
      case $state in
        work)
          ((session++))
          state="break"
          ;;
        break)
          state="work"
          ;;
        *)
          state="work"
          ;;
      esac
      ;;
  esac
  read -p "Continue to the next session? [y/N]: " confirm
  if [[ $confirm != [yY] ]]; then
    echo "Pomodoro finalized."
    break
  fi
  clear
done

