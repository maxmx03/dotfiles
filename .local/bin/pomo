#!/usr/bin/env bash

function clock {
  minutes=$(($1 / 60))
  seconds=$(($1 % 60))
  printf "%02d:%02d" "$minutes" "$seconds"
}

function timer {
  local message
  t=$(($1 * 60))
  message=$2
  for ((i = 1; i <= t; i++)); do
    printf "\r${message^^} %s" "$(clock $((t - i)))"
    sleep 1s
  done

  echo -e "\nDone!"
}

state=$1

function notify {
  at now <<END
  notify-send -t "$1" "session done"
  pw-play $HOME/Music/clock-alarm.mp3
END
}

declare -i session
session=0
while true; do
  case $state in
  work)
    timer "25" "$state"
    ((session++))
    notify "$state" 2>/dev/null
    ;;
  break)
    timer "5" "$state"
    notify "$state" 2>/dev/null
    ;;
  extrabreak)
    timer "10" "$state"
    notify "$state" 2>/dev/null
    ;;
  *)
    echo "
      usage:
      pomodoro work
      pomodoro break
      "
    ;;
  esac

  case $state in
  work)
    if [[ $((session % 4)) -eq 0 ]]; then
      state="extrabreak"
    else
      state="break"
    fi
    ;;
  break)
    state="work"
    ;;
  *)
    state="work"
    ;;
  esac
  read -ei "Y" -p "Continue to the next session? [Y/n]: " confirm

  if [[ $confirm != [yY] ]]; then
    echo "Pomodoro finalized."
    break
  fi
done
